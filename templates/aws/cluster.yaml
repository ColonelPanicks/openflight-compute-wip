---
Description: 'Flight Domain Template'
Parameters:
  sourceimage:
    Type: String
    Description: 'AMI ID to use for nodes'
  clustername:
    Type: String
    Description: 'Name of the cluster'
  customdata:
    Type: String
    Description: 'Cloud-init customdata for all systems encoded in base64'
  computeNodesCount: 
    Type: Number
    Default: 2
    MinValue: 2
    MaxValue: 8
    Description: 'Number of compute nodes to include in cluster'
  gatewayinstancetype:
    Type: String
    Default: 't3.small'
    Description: 'Instance type to be used for the gateway node'
  computeinstancetype:
    Type: String
    Default: 't3.small'
    Description: 'Instance type to be used for the compute nodes'
Conditions:
  CreateNode03: !Or [ !Equals [ !Ref computeNodesCount, 3 ], !Equals [ !Ref computeNodesCount, 4 ], !Equals [ !Ref computeNodesCount, 5 ], !Equals [ !Ref computeNodesCount, 6 ], !Equals [ !Ref computeNodesCount, 7 ], !Equals [ !Ref computeNodesCount, 8 ]]
  CreateNode04: !Or [ !Equals [ !Ref computeNodesCount, 4 ], !Equals [ !Ref computeNodesCount, 5 ], !Equals [ !Ref computeNodesCount, 6 ], !Equals [ !Ref computeNodesCount, 7 ], !Equals [ !Ref computeNodesCount, 8 ]]
  CreateNode05: !Or [ !Equals [ !Ref computeNodesCount, 5 ], !Equals [ !Ref computeNodesCount, 6 ], !Equals [ !Ref computeNodesCount, 7 ], !Equals [ !Ref computeNodesCount, 8 ]]
  CreateNode06: !Or [ !Equals [ !Ref computeNodesCount, 6 ], !Equals [ !Ref computeNodesCount, 7 ], !Equals [ !Ref computeNodesCount, 8 ]]
  CreateNode07: !Or [ !Equals [ !Ref computeNodesCount, 7 ], !Equals [ !Ref computeNodesCount, 8 ]]
  CreateNode08: !Equals [ !Ref computeNodesCount, 8 ]
Resources:
  flightcloudclusternetwork:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.10.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true

  flightcloudclusterinternetgateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: flightcloudclusternetwork

  flightcloudclusterinternetgatewayattachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref flightcloudclusterinternetgateway
      VpcId: !Ref flightcloudclusternetwork

  flightcloudclusterroutetable:
    Type: AWS::EC2::RouteTable
    DependsOn: flightcloudclusterinternetgatewayattachment
    Properties:
      VpcId: !Ref flightcloudclusternetwork

  flightcloudclusternetwork1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.10.0.0/19
      VpcId: !Ref flightcloudclusternetwork
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'

  flightcloudclusternetwork1subnetroutetableassocation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref flightcloudclusternetwork1
      RouteTableId: !Ref flightcloudclusterroutetable

  flightcloudclusterrouteinternetgateway:
    Type: AWS::EC2::Route
    DependsOn: flightcloudclusterinternetgatewayattachment
    Properties:
      RouteTableId: !Ref flightcloudclusterroutetable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref flightcloudclusterinternetgateway

  flightcloudclustersecuritygroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: flightcloudcluster
      GroupDescription: 'Primary SG for basic'
      VpcId: !Ref flightcloudclusternetwork
      SecurityGroupIngress:
        -
          IpProtocol: '-1'
          FromPort: 0
          ToPort: 65535
          CidrIp: '10.10.0.0/16'
          Description: 'Allow all traffic for cluster VPC'
        -
          IpProtocol: 'tcp'
          FromPort: 22
          ToPort: 22
          CidrIp: '0.0.0.0/0'
          Description: 'Allow inbound SSH access'
        -
          IpProtocol: 'tcp'
          FromPort: 80
          ToPort: 80
          CidrIp: '0.0.0.0/0'
          Description: 'Allow inbound HTTP connections'
        -
          IpProtocol: 'tcp'
          FromPort: 443
          ToPort: 443
          CidrIp: '0.0.0.0/0'
          Description: 'Allow inbound HTTPS connections'
        -
          IpProtocol: 'tcp'
          FromPort: 5901
          ToPort: 5911
          CidrIp: '0.0.0.0/0'
          Description: 'Allow 10 VNC sessions'
        -
          IpProtocol: 'icmp'
          FromPort: '8'
          ToPort: '-1'
          CidrIp: '0.0.0.0/0'
          Description: 'Allow ping'
      SecurityGroupEgress:
        -
          IpProtocol: '-1'
          FromPort: 0
          ToPort: 65535
          CidrIp: '0.0.0.0/0'
          Description: 'Allow outbound internet access'

  flightcloudclusterprivatedns:
      Type: AWS::Route53::HostedZone
      DependsOn: flightcloudclusternetwork
      Properties:
        HostedZoneConfig:
          Comment: "Private DNS for a flightcloudcluster"
        Name: !Sub
          - "pri.${cn}.cluster.local"
          - { cn: !Ref clustername }
        VPCs:
        - VPCId: !Ref flightcloudclusternetwork
          VPCRegion: !Ref 'AWS::Region'

  dnsgateway1:
      Type: AWS::Route53::RecordSet
      DependsOn: flightcloudclusterprivatedns
      Properties:
        HostedZoneName: !Sub
          - "pri.${cn}.cluster.local."
          - { cn: !Ref clustername }
        Comment: Entry for gateway1
        Name: !Sub
          - "gateway1.pri.${cn}.cluster.local"
          - { cn: !Ref clustername }
        Type: A
        TTL: '900'
        ResourceRecords:
        - !GetAtt flightcloudclustergateway1.PrivateIp

  dnsnode01:
      Type: AWS::Route53::RecordSet
      DependsOn: flightcloudclusterprivatedns
      Properties:
        HostedZoneName: !Sub
          - "pri.${cn}.cluster.local."
          - { cn: !Ref clustername }
        Comment: Entry for node01
        Name: !Sub
          - "node01.pri.${cn}.cluster.local"
          - { cn: !Ref clustername }
        Type: A
        TTL: '900'
        ResourceRecords:
        - !GetAtt flightcloudclusternode01.PrivateIp

  dnsnode02:
      Type: AWS::Route53::RecordSet
      DependsOn: flightcloudclusterprivatedns
      Properties:
        HostedZoneName: !Sub
          - "pri.${cn}.cluster.local."
          - { cn: !Ref clustername }
        Comment: Entry for node02
        Name: !Sub
          - "node02.pri.${cn}.cluster.local"
          - { cn: !Ref clustername }
        Type: A
        TTL: '900'
        ResourceRecords:
        - !GetAtt flightcloudclusternode02.PrivateIp

  dnsnode03:
      Type: AWS::Route53::RecordSet
      Condition: CreateNode03
      DependsOn: flightcloudclusterprivatedns
      Properties:
        HostedZoneName: !Sub
          - "pri.${cn}.cluster.local."
          - { cn: !Ref clustername }
        Comment: Entry for node03
        Name: !Sub
          - "node03.pri.${cn}.cluster.local"
          - { cn: !Ref clustername }
        Type: A
        TTL: '900'
        ResourceRecords:
        - !GetAtt flightcloudclusternode03.PrivateIp

  dnsnode04:
      Type: AWS::Route53::RecordSet
      Condition: CreateNode04
      DependsOn: flightcloudclusterprivatedns
      Properties:
        HostedZoneName: !Sub
          - "pri.${cn}.cluster.local."
          - { cn: !Ref clustername }
        Comment: Entry for node04
        Name: !Sub
          - "node04.pri.${cn}.cluster.local"
          - { cn: !Ref clustername }
        Type: A
        TTL: '900'
        ResourceRecords:
        - !GetAtt flightcloudclusternode04.PrivateIp

  dnsnode05:
      Type: AWS::Route53::RecordSet
      Condition: CreateNode05
      DependsOn: flightcloudclusterprivatedns
      Properties:
        HostedZoneName: !Sub
          - "pri.${cn}.cluster.local."
          - { cn: !Ref clustername }
        Comment: Entry for node05
        Name: !Sub
          - "node05.pri.${cn}.cluster.local"
          - { cn: !Ref clustername }
        Type: A
        TTL: '900'
        ResourceRecords:
        - !GetAtt flightcloudclusternode05.PrivateIp

  dnsnode06:
      Type: AWS::Route53::RecordSet
      Condition: CreateNode06
      DependsOn: flightcloudclusterprivatedns
      Properties:
        HostedZoneName: !Sub
          - "pri.${cn}.cluster.local."
          - { cn: !Ref clustername }
        Comment: Entry for node06
        Name: !Sub
          - "node06.pri.${cn}.cluster.local"
          - { cn: !Ref clustername }
        Type: A
        TTL: '900'
        ResourceRecords:
        - !GetAtt flightcloudclusternode06.PrivateIp

  dnsnode07:
      Type: AWS::Route53::RecordSet
      Condition: CreateNode07
      DependsOn: flightcloudclusterprivatedns
      Properties:
        HostedZoneName: !Sub
          - "pri.${cn}.cluster.local."
          - { cn: !Ref clustername }
        Comment: Entry for node07
        Name: !Sub
          - "node07.pri.${cn}.cluster.local"
          - { cn: !Ref clustername }
        Type: A
        TTL: '900'
        ResourceRecords:
        - !GetAtt flightcloudclusternode07.PrivateIp

  dnsnode08:
      Type: AWS::Route53::RecordSet
      Condition: CreateNode08
      DependsOn: flightcloudclusterprivatedns
      Properties:
        HostedZoneName: !Sub
          - "pri.${cn}.cluster.local."
          - { cn: !Ref clustername }
        Comment: Entry for node08
        Name: !Sub
          - "node08.pri.${cn}.cluster.local"
          - { cn: !Ref clustername }
        Type: A
        TTL: '900'
        ResourceRecords:
        - !GetAtt flightcloudclusternode08.PrivateIp

  flightcloudclustergateway1network1interface:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SourceDestCheck: false
      GroupSet:
        - !Ref flightcloudclustersecuritygroup
      SubnetId: !Ref flightcloudclusternetwork1

  flightcloudclustergateway1:
    Type: AWS::EC2::Instance
    DependsOn: flightcloudclustergateway1pubIPassociation
    Properties:
      Tags:
        -
          Key: "Name"
          Value: !Sub
           - "${cn}_gateway1"
           - { cn: !Ref clustername }
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      ImageId: !Ref sourceimage
      InstanceType: !Ref gatewayinstancetype
      Monitoring: true
      NetworkInterfaces:
        -
          NetworkInterfaceId: !Ref flightcloudclustergateway1network1interface
          DeviceIndex: 0
      UserData: !Ref customdata
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: 'gp3'
            DeleteOnTermination: 'true'

  flightcloudclustergateway1pubIP: 
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  flightcloudclustergateway1pubIPassociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      NetworkInterfaceId: !Ref flightcloudclustergateway1network1interface
      AllocationId: !GetAtt flightcloudclustergateway1pubIP.AllocationId

  flightcloudclusternode01network1interface:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SourceDestCheck: false
      GroupSet:
        - !Ref flightcloudclustersecuritygroup
      SubnetId: !Ref flightcloudclusternetwork1

  flightcloudclusternode01:
    Type: AWS::EC2::Instance
    DependsOn: flightcloudclusternode01pubIPassociation
    Properties:
      Tags:
        -
          Key: "Name"
          Value: !Sub
           - "${cn}_node01"
           - { cn: !Ref clustername }
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      ImageId: !Ref sourceimage
      InstanceType: !Ref computeinstancetype
      Monitoring: true
      NetworkInterfaces:
        -
          NetworkInterfaceId: !Ref flightcloudclusternode01network1interface
          DeviceIndex: 0
      UserData: !Ref customdata
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: 'gp3'
            DeleteOnTermination: 'true'

  flightcloudclusternode01pubIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  flightcloudclusternode01pubIPassociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      NetworkInterfaceId: !Ref flightcloudclusternode01network1interface
      AllocationId: !GetAtt flightcloudclusternode01pubIP.AllocationId

  flightcloudclusternode02network1interface:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SourceDestCheck: false
      GroupSet:
        - !Ref flightcloudclustersecuritygroup
      SubnetId: !Ref flightcloudclusternetwork1

  flightcloudclusternode02:
    Type: AWS::EC2::Instance
    DependsOn: flightcloudclusternode02pubIPassociation
    Properties:
      Tags:
        -
          Key: "Name"
          Value: !Sub
           - "${cn}_node02"
           - { cn: !Ref clustername }
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      ImageId: !Ref sourceimage
      InstanceType: !Ref computeinstancetype
      Monitoring: true
      NetworkInterfaces:
        -
          NetworkInterfaceId: !Ref flightcloudclusternode02network1interface
          DeviceIndex: 0
      UserData: !Ref customdata
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: 'gp3'
            DeleteOnTermination: 'true'

  flightcloudclusternode02pubIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  flightcloudclusternode02pubIPassociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      NetworkInterfaceId: !Ref flightcloudclusternode02network1interface
      AllocationId: !GetAtt flightcloudclusternode02pubIP.AllocationId

  flightcloudclusternode03network1interface:
    Type: AWS::EC2::NetworkInterface
    Condition: CreateNode03
    Properties:
      SourceDestCheck: false
      GroupSet:
        - !Ref flightcloudclustersecuritygroup
      SubnetId: !Ref flightcloudclusternetwork1

  flightcloudclusternode03:
    Type: AWS::EC2::Instance
    DependsOn: flightcloudclusternode03pubIPassociation
    Condition: CreateNode03
    Properties:
      Tags:
        -
          Key: "Name"
          Value: !Sub
           - "${cn}_node03"
           - { cn: !Ref clustername }
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      ImageId: !Ref sourceimage
      InstanceType: !Ref computeinstancetype
      Monitoring: true
      NetworkInterfaces:
        -
          NetworkInterfaceId: !Ref flightcloudclusternode03network1interface
          DeviceIndex: 0
      UserData: !Ref customdata
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: 'gp3'
            DeleteOnTermination: 'true'

  flightcloudclusternode03pubIP:
    Type: AWS::EC2::EIP
    Condition: CreateNode03
    Properties:
      Domain: vpc

  flightcloudclusternode03pubIPassociation:
    Type: AWS::EC2::EIPAssociation
    Condition: CreateNode03
    Properties:
      NetworkInterfaceId: !Ref flightcloudclusternode03network1interface
      AllocationId: !GetAtt flightcloudclusternode03pubIP.AllocationId

  flightcloudclusternode04network1interface:
    Type: AWS::EC2::NetworkInterface
    Condition: CreateNode04
    Properties:
      SourceDestCheck: false
      GroupSet:
        - !Ref flightcloudclustersecuritygroup
      SubnetId: !Ref flightcloudclusternetwork1

  flightcloudclusternode04:
    Type: AWS::EC2::Instance
    DependsOn: flightcloudclusternode04pubIPassociation
    Condition: CreateNode04
    Properties:
      Tags:
        -
          Key: "Name"
          Value: !Sub
           - "${cn}_node04"
           - { cn: !Ref clustername }
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      ImageId: !Ref sourceimage
      InstanceType: !Ref computeinstancetype
      Monitoring: true
      NetworkInterfaces:
        -
          NetworkInterfaceId: !Ref flightcloudclusternode04network1interface
          DeviceIndex: 0
      UserData: !Ref customdata
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: 'gp3'
            DeleteOnTermination: 'true'

  flightcloudclusternode04pubIP:
    Type: AWS::EC2::EIP
    Condition: CreateNode04
    Properties:
      Domain: vpc

  flightcloudclusternode04pubIPassociation:
    Type: AWS::EC2::EIPAssociation
    Condition: CreateNode04
    Properties:
      NetworkInterfaceId: !Ref flightcloudclusternode04network1interface
      AllocationId: !GetAtt flightcloudclusternode04pubIP.AllocationId

  flightcloudclusternode05network1interface:
    Type: AWS::EC2::NetworkInterface
    Condition: CreateNode05
    Properties:
      SourceDestCheck: false
      GroupSet:
        - !Ref flightcloudclustersecuritygroup
      SubnetId: !Ref flightcloudclusternetwork1

  flightcloudclusternode05:
    Type: AWS::EC2::Instance
    DependsOn: flightcloudclusternode05pubIPassociation
    Condition: CreateNode05
    Properties:
      Tags:
        -
          Key: "Name"
          Value: !Sub
           - "${cn}_node05"
           - { cn: !Ref clustername }
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      ImageId: !Ref sourceimage
      InstanceType: !Ref computeinstancetype
      Monitoring: true
      NetworkInterfaces:
        -
          NetworkInterfaceId: !Ref flightcloudclusternode05network1interface
          DeviceIndex: 0
      UserData: !Ref customdata
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: 'gp3'
            DeleteOnTermination: 'true'

  flightcloudclusternode05pubIP:
    Type: AWS::EC2::EIP
    Condition: CreateNode05
    Properties:
      Domain: vpc

  flightcloudclusternode05pubIPassociation:
    Type: AWS::EC2::EIPAssociation
    Condition: CreateNode05
    Properties:
      NetworkInterfaceId: !Ref flightcloudclusternode05network1interface
      AllocationId: !GetAtt flightcloudclusternode05pubIP.AllocationId

  flightcloudclusternode06network1interface:
    Type: AWS::EC2::NetworkInterface
    Condition: CreateNode06
    Properties:
      SourceDestCheck: false
      GroupSet:
        - !Ref flightcloudclustersecuritygroup
      SubnetId: !Ref flightcloudclusternetwork1

  flightcloudclusternode06:
    Type: AWS::EC2::Instance
    DependsOn: flightcloudclusternode06pubIPassociation
    Condition: CreateNode06
    Properties:
      Tags:
        -
          Key: "Name"
          Value: !Sub
           - "${cn}_node06"
           - { cn: !Ref clustername }
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      ImageId: !Ref sourceimage
      InstanceType: !Ref computeinstancetype
      Monitoring: true
      NetworkInterfaces:
        -
          NetworkInterfaceId: !Ref flightcloudclusternode06network1interface
          DeviceIndex: 0
      UserData: !Ref customdata
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: 'gp3'
            DeleteOnTermination: 'true'

  flightcloudclusternode06pubIP:
    Type: AWS::EC2::EIP
    Condition: CreateNode06
    Properties:
      Domain: vpc

  flightcloudclusternode06pubIPassociation:
    Type: AWS::EC2::EIPAssociation
    Condition: CreateNode06
    Properties:
      NetworkInterfaceId: !Ref flightcloudclusternode06network1interface
      AllocationId: !GetAtt flightcloudclusternode06pubIP.AllocationId

  flightcloudclusternode07network1interface:
    Type: AWS::EC2::NetworkInterface
    Condition: CreateNode07
    Properties:
      SourceDestCheck: false
      GroupSet:
        - !Ref flightcloudclustersecuritygroup
      SubnetId: !Ref flightcloudclusternetwork1

  flightcloudclusternode07:
    Type: AWS::EC2::Instance
    DependsOn: flightcloudclusternode07pubIPassociation
    Condition: CreateNode07
    Properties:
      Tags:
        -
          Key: "Name"
          Value: !Sub
           - "${cn}_node07"
           - { cn: !Ref clustername }
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      ImageId: !Ref sourceimage
      InstanceType: !Ref computeinstancetype
      Monitoring: true
      NetworkInterfaces:
        -
          NetworkInterfaceId: !Ref flightcloudclusternode07network1interface
          DeviceIndex: 0
      UserData: !Ref customdata
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: 'gp3'
            DeleteOnTermination: 'true'

  flightcloudclusternode07pubIP:
    Type: AWS::EC2::EIP
    Condition: CreateNode07
    Properties:
      Domain: vpc

  flightcloudclusternode07pubIPassociation:
    Type: AWS::EC2::EIPAssociation
    Condition: CreateNode07
    Properties:
      NetworkInterfaceId: !Ref flightcloudclusternode07network1interface
      AllocationId: !GetAtt flightcloudclusternode07pubIP.AllocationId

  flightcloudclusternode08network1interface:
    Type: AWS::EC2::NetworkInterface
    Condition: CreateNode08
    Properties:
      SourceDestCheck: false
      GroupSet:
        - !Ref flightcloudclustersecuritygroup
      SubnetId: !Ref flightcloudclusternetwork1

  flightcloudclusternode08:
    Type: AWS::EC2::Instance
    DependsOn: flightcloudclusternode08pubIPassociation
    Condition: CreateNode08
    Properties:
      Tags:
        -
          Key: "Name"
          Value: !Sub
           - "${cn}_node08"
           - { cn: !Ref clustername }
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      ImageId: !Ref sourceimage
      InstanceType: !Ref computeinstancetype
      Monitoring: true
      NetworkInterfaces:
        -
          NetworkInterfaceId: !Ref flightcloudclusternode08network1interface
          DeviceIndex: 0
      UserData: !Ref customdata
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: 'gp3'
            DeleteOnTermination: 'true'

  flightcloudclusternode08pubIP:
    Type: AWS::EC2::EIP
    Condition: CreateNode08
    Properties:
      Domain: vpc

  flightcloudclusternode08pubIPassociation:
    Type: AWS::EC2::EIPAssociation
    Condition: CreateNode08
    Properties:
      NetworkInterfaceId: !Ref flightcloudclusternode08network1interface
      AllocationId: !GetAtt flightcloudclusternode08pubIP.AllocationId

